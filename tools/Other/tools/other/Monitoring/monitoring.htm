<html><head><meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>[Fixhelp]Quoteexchange Ltd. Monitoring System</title>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link rel="stylesheet" type="text/css" href="./monitoring_files/monitoring.css">
</head>
<body class="noimage" onload="">
	<div id="header" align="CENTER">
		<table border="0" width="1200px" align="center">
			<tbody>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="light">
									<td>
										<h1><center><b>*** Steps to follow if the server is Critical or Going down ***</b></center></h1>
									</td>
								</tr>
								<tr class="light">
									<td>
										Attempt to login to the server via ssh (putty) and make sure prompt is responsive (i.e. so no network issues between the internet and the server)
									</td>
								</tr>
								<tr class="light">
									<td>
										Also a slow response could be that server is about to keel over (which means meaning the apache and mysql are taking too many resources - although their configs should prevent this)
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										High load
									</td>
								</tr>
								<tr class="light">
									<td>
										Use <b><i>top</i></b> and <b><i>ps</i></b> also use <b><i>ps aux | awk '{print $11}' | sort | uniq -c | sort -nk1 | tail -n5<i></i></i></b><i><i>
									</i></i></td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										Check major services are running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>Apache -</b> /sbin/service httpd status - should return a PID (process id) and state the service is running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>MYSQL -</b> /sbin/service mysqld/mysql status - should return a PID (process id) and state the service is running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>CROND -</b> /sbin/service crond status - should return a PID (process id) and state the service is running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>RSYNC -</b> /sbin/service rsync status - should return a PID (process id) and state the service is running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>SFTP -</b> /sbin/service vsftpd status - should return a PID (process id) and state the service is running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>MAIL -</b> /sbin/service sendmail status - should return a PID (process id) and state the service is running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>To change a service -</b> /sbin/service <i>servicename</i> start/stop/restart
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>If a service cannot be stopped -</b> Kill the process id
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										Apache/PHP issues
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>ps -aef | grep php | grep -v grep</b> This command shows all the php scripts currently running
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>MYSQL -</b> /sbin/service mysqld/mysql status - should return a PID (process id) and state the service is running. There are a few that shouldn’t be and they are, QX-AutoReleaseCode.php, ctmtimestamps, quoteservicestats
									</td>
								</tr>
								<tr class="light">
									<td>
										The main ones which you shouldn’t stop are the scrapers and service scripts and they rest can pretty much be stopped as long as the server is experiencing issues. We need to remove the ones that don’t complete as they take up load time on the server.
									</td>
								</tr>
								<tr class="light">
									<td>
										If a script shouldnt be running kill it (check the date the process has started, shouldnt be older than today)
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										MYSQL
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>mysqladmin -uroot -pthomaspeck2 proc stat</b> – This will show statistics for MYSQL
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>mysqladmin -uroot -pthomaspeck2 -i1 extended | grep Threads_running</b>. This will show the current threads in use by MYSQL in the style of <i>tail</i> or <i>top</i><br>
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>mysqladmin -uroot -pthomaspeck2 extended</b> This shows the Mysql variables and values
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>tail -f /data/qxdata/databases/{dbname}-slow.log</b>. This will show slow MYSQL queries as they are run<br>
									</td>
								</tr>
								<tr class="light">
									<td>
										Log into mysql
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>show open tables where In_use &gt; 0;</b>shows tables currently in use
									</td>
								</tr>
								<tr class="light">
									<td>
										<center><b>-Kill Query if logged into MYSQL-</b></center>
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>show full processlist\G</b>This will show the currently running queries. Check for locked files, if there is a large select just before the locked files this query should be killed with <b>kill<i>(query number)</i></b>
									</td>
								</tr>
								<tr class="light">
									<td>
										<center><b>-Kill Query if you cannot log into MYSQL-</b></center>
									</td>
								</tr>
								<tr class="light">
									<td>
										<b> mysqladmin -uroot -pthomaspeck2 processlist</b>This will show the currently running queries. Check for locked files, if there is a large select just before the locked files this query should be killed with <b> mysqladmin -uroot -pthomaspeck2 kill<i>(query ID)</i></b>
										<br>
										<br>
										Use the following is Mysql Time is greater that 100 seconds:<br>
										<b>select concat('KILL ',id,';') from information_schema.processlist where user='qd' and time > 100 into outfile '/tmp/d.txt';</b>
										<br>
										<br>
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										Cron daemon
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>ps -aef | grep -A4 <i>cron</i></b> – This shows the scripts which are being run by the cronjob. If these are older than a day they should be killed
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>services/QE-Monitoring.php</b> – This is the main monitoring script that seems to cause issues on lower spec servers. It inserts data during every quote and this has a knock on affect on the service and then starts locking the db. We need to remove this if there is no monitoring on the server.
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										rSync
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>ps -aef | grep rsync</b> – This shows the scripts which are being run by the rsync. If these are older than a day they should be killed. 
										We found that there are rSync scripts still being ran in the background. This was a knock on affect from QX-AutoReleaseCode.php not having the right password. To remove these processes if this happens again, we need to run <b>ps -ef | grep sync | awk '{print $2 " " $5 " " $8}'</b> and then <b>kill -9</b> the tasks as this will end the process that will never complete.
									</td>
								</tr>
								<tr class="light">
									<td>
										We found that there are rSync scripts still being ran in the background. This was a knock on affect from QX-AutoReleaseCode.php not having the right password. To remove these processes if this happens again, we need to run <b>ps -ef | grep sync | awk '{print $2 " " $5 " " $8}'</b> and then <b>kill -9</b> the tasks as this will end the process that will never complete.
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody>
								<tr class="dark">
									<td>
										sendMail
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>sendmail -bp</b> view mails in queue
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>Purge mail queue – If there is a backlog of emails to be sent or one holding up the queue this will increase load.</b><br>
										<b>/sbin/service sendmail stop</b> - stop the service first<br>
										<b>find /var/spool/mqueue -name '*' | xargs rm (some servers are: find /var/spool/clientmqueue -name '*' | xargs rm)</b> - pipe the file name for each mail to rm for deletion<br>
										<b>/sbin/service sendmail start</b> - restart the service<br>
										<b>sendmail -q -v</b> - force the service to process the queue and display output
										<br></br>
										<br></br>
										If There is a massive amount of files, do the following:
										<br></br>
										<b>/sbin/service sendmail stop</b> - stop the service first<br>
										<br></br>
										<b>/sbin/service sendmail stop</b> - stop the service first<br>
									</td>
								</tr>
								<tr class="light">
									<td>
										<b>Few commands to check that mail is working:</b>
										<br>
										sending an email: <b>echo hello World ss1 | sendmail -v stuart@quoteexchange.co.uk</b>
										<br>
										checking sendmail service 1: <b> sendmail -d0.1 -bv</b>
										<br>
										checking sendmail service 2: <b> echo "" | /usr/sbin/sendmail -d0.4</b>
										<br>
										mail queue: <b>tail -100 /var/log/maillog</b>
									</td>
								</tr>
							</tbody>
						</table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody><tr class="dark">
								<td>
									Server load checks
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>top -c -s</b>This will show commands for each process currently running and relative statisitcs i.e. average load
								</td>
							</tr> 
							<tr class="light">
								<td>
									<b>ps -auxf | sort -nr -k 3 | head -3</b>. This will show the top 3 processes on the CPU consumption
								</td>
							</tr> 
							<tr class="light">
								<td>
									<b>ps -auxf | sort -nr -k 4 | head -3</b>. This will show the top 3 processes on the Memory consumption
								</td>
							</tr> 
						</tbody></table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody><tr class="dark">
								<td>
									Hardware related tuning (Drives)
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>df -lh</b>. This will show the Hard Drive Name and space available on specific drives
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>find <i>path (usually /)</i> -type f -size +50000k -exec ls -lh {} \; | awk '{ print $5 ": " $9 }' | egrep -v 'rSync|.ibd|.MYD|.MYI|qxsales|proc'</b>. If the hard drive is nearly full this will show the large files on a server minus certain file types.
									<br>
									<br>
									<b>find / -type f -size +50000k -exec ls -lh {} \; | awk '{ print $5 ": " $9 }' | egrep -v '.ibd|.MYD|.MYI|qxsales|proc|locale'</b>
									<br>
									<br>
									<br>
									You can also search all files without the use of the db:
									<br>
									<br>
									<b>find / -type f -size +50000k -exec ls -lh {} \;</b>
									<br>
									<br>
									<br>
									YOther usefull Find Commands:
									<br>
									<br>
									<b>find / -type f -size +50000k -exec ls -lh {} \; | awk '{ print $5 ": " $9 }' | sort -n -r | grep ^[0-9.]*G</b>
									<br>
									<br>
									<b>find / -type f -size +50000k -exec ls -lh {} \; | awk '{ print $5 ": " $9 }'</b>
									<br>
									<br>
									<b>find /var/lib -type f -size +50000k -exec ls -lh {} \;</b>
									<br>
									<br>
									<b>find /var/log -type f -size +50000k -exec ls -lh {} \;</b>
									<br>
									<br>
									YOther usefull Find Commands for biggest folder:
									<br>
									<br>
									<b>du -h / --max-depth=1</b>
									<br>
									<br>
									<b>du -h / | grep ^[0-9.]*G | sort -n -r | head -n 20</b>
									<br>
									<br>
									<b>du -h / | grep ^[0-9.]*M | sort -n -r | head -n 20</b>
									<br>
									<br>
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>find <i>path (usually /)</i> -name "*" -mtime -<i>days</i> -print</b>. This will show a list of files created in within the no days specified (use "<b>| wc -l</b>" to get count)
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>du -hs <i>path</i></b>. This will show the size of a specific folder.
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>rm <i>(path with filename)</i></b>. This will remove the file (You will be prompted for a Y/N to confirm) **do not remove any files with .ibd or .myd extensions
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>cat /dev/null &gt; <i>(path with filename)</i></b>. This will clear the file contents, the file will remain on the server
								</td>
							</tr>
						</tbody></table>
					</td>
				</tr>
				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody><tr class="dark">
								<td>
									How to Kill a process
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>kill -15 <i>process id</i></b> - kills the process allowing to finish cleanly (maybe ignored)<br>
									<b>kill -9 <i>process id</i></b> - kills the process immediately (may leave behind logs/temp files etc)
								</td>
							</tr>
							<tr class="light">
								<td>
									<center><br>*** Note - If using kill, <b>DO NOT KILL /usr/sbin/sshd (ssh service)</b> as this will not allow us to log in ***<br></center>
								</td>
							</tr>
						</tbody></table>
					</td>
				</tr>

				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody><tr class="dark">
								<td>
									How to find a specific piece of text on a server
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>grep -H -r "<i>{Insert text you want to search for}</i>" <i>Specify path to look under</i> | cut -d: -f1 | egrep -v '.sql|.tpl|svn|.txt'</b>
									<br>
									<br>
									So an example would be:<br>
									<b>grep -H -r "Please Call Me" /var/www/html/qx30 | cut -d: -f1 | egrep -v '.sql|.tpl|svn|.txt'</b>
								</td>
							</tr>
						</tbody></table>
					</td>
				</tr>

				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody><tr class="dark">
								<td>
									Network Forensics
								</td>
							</tr>
							<tr class="light">
								<td>
									First you need to run the following command in order to capture the data:<br></br>
									<b>sudo tcpdump -w log2.pcap</b><br></br>
									What this then does is save the dump to a file on the server (need to press ctrl + c to stop and the file is usually in /root)
									<br>
									<br>
									We would then use the up above file and download to the pc.  Then you should open it up in wireshark to analyse the data.<br>
									If you dont have wireshark, youi can format the data into something more readable.  Use the following:<br></br><br></br>
									<b>1 - sudo tcpdump -w log.pcap (run this until finished capture)</b><br></br>
									<b>2 - sudo tcpdump -qns 0 -A -r log.pcap (read the information in a good format)</b><br></br>
									<b>3 - sudo tcpdump -qns 0 -A -r log.pcap > log.txt (dump this information into a text file)</b><br></br>
									<b>4 - cat log.txt (read it)</b><br></br>
								</td>
							</tr>
						</tbody></table>
					</td>
				</tr>

				<tr>
					<td>
						<table border="0" width="100%" align="center">
							<tbody><tr class="dark">
								<td>
									Firewall/DDOS attack prevention
								</td>
							</tr>
							<tr class="light">
								<td>
									<b>netstat</b> – This shows all connections coming in and out of the server.<br>
									Here we can monitor who is connecting to the service and to check to see if there is an unwanted IP address. 195.171.3.13 was one of the IP address that came into a few of our servers and caused a high load on the service. How we stopped this conenction was to add it to the iptables which is the server firewall.<br>
									To insert the IP address you need to do:<br>
									<b>iptables -A INPUT -s <i>ipaddress</i> -j DROP</b><br>
									<b>/sbin/service iptables save</b><br>
									<b>/sbin/service iptables restart</b>
									<br>
									<br>
									<b>To View the Rules in IpTables:</b><br>
									cat  /etc/sysconfig/iptables
								</br>
								<br>
								<b>To clear the Firewall Rules:</b><br>
								iptables --flush
								<br></br>
								<b>Then save the Table:</b><br>
								service iptables save
							</br>
						</td>
					</tr>
					<tr class="light">
						<td>
							<center>To remove an IP address use <b>iptables -D INPUT -s <i>ipaddress</i> -j DROP</b></center>
						</td>
					</tr>
				</tbody></table>
			</td>
		</tr>
		<tr>
			<td>
				<table border="0" width="100%" align="center">
					<tbody><tr class="dark">
						<td>

							Removing Files from a Folder
						</td>
					</tr>
					<tr class="light">
						<td>
							<b>This shows how to remove files from a folder (typical one in /tmp on qx9)</b>
							<br>
							<br>
							<b>Go into the specific directory you want to remove the files from(e.g. /tmp/):</b><br>
							cd /tmp/
						</br>
						<br>
						<b>Now remove the files:</b><br>
						rm -rf /tmp/
					</td>
				</tr>
				<tr class="light">

				</tr>
			</tbody>
		</table>
	</td>
</tr>
<tr>
	<td>
		<table border="0" width="100%" align="center">
			<tbody>
				<tr class="dark">
					<td>

						Quoteservice
					</td>
				</tr>
				<tr class="light">
					<td>
						We need to monitor the response from the quote service back to the panel. One of the ways we can find out is:<br><br>
						<b>SELECT COUNT(*) FROM QX_QUOTESERVICESTATS WHERE QS_TIME1 LIKE '2011-01-20 07%' AND TIMEDIFF(QS_TIME1, QS_TIME6) &lt;= '-00:00:20'</b><br> – This will count how many quotes that came with and equal to 20 seconds. We can change this command so that we can see various times during the day for when we returned a price.<br>
						<b>SELECT COUNT(*) FROM QX_QUOTESERVICESTATS WHERE QS_TIME1 LIKE '2011-01-20 09%'</b><br> - this counts how many quotes have been done within a specific time (this was was anytime at 9)<br>
						<b>SELECT TIMEDIFF(QS_TIME1, QS_TIME6) AS TIME, QS_AGGCODE, QS_REFERENCE, QS_TIME1, QS_TIME6 FROM QX_QUOTESERVICESTATS WHERE QS_TIME1 LIKE '2011-01-20 10%' AND TIMEDIFF(QS_TIME1, QS_TIME6) &gt; '-00:00:30' ORDER BY QS_KEY DESC LIMIT 10</b><br> – this gives the last 10 quotes and the time it took to be sent.<br>
					</td>
				</tr>
			</tbody>
		</table>
	</td>
</tr>
</tbody>
</table>
<table border="0" width="1200px" height="150px" align="center">
	<tbody>
		<tr class="light">
			<td>
				<h1><center><b>*** Get Server Specs from Server ***</b></center></h1>
			</td>
		</tr>
		<tr class="light">
			<td>
				<b>cat /proc/cpuinfo</b> Get CPU related information<br> 
				<b>cat /proc/meminfo</b> Get information about amount of RAM and usage<br>
				<b>dmidecode --type 17</b> Get RAM related information<br> 
				<b> df -h</b> Get Hard Drive related information<br>
				<b> hdparm -tT <i>device</i></b> Test hard drive read speed<br>
			</td>
		</tr>
	</tbody>
</table>

</body>
</html>